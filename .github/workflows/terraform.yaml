name: "[DEMO] Setup Dev Environment"
on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform Action to Perform"
        type: choice
        options:
          - apply
          - destroy
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build_n_push:
    if: ${{ github.event.inputs.action == 'apply' }}
    runs-on: ubuntu-latest
    name: Build and push
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials for Secret Manager
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, configure and push to ECR
        id: build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/demo:$TAG -t $REGISTRY/demo:dev . 
          docker push $REGISTRY/demo --all-tags
          helm package demo-chart --app-version $TAG --set registry=$REGISTRY
          helm push demo-chart-0.1.0.tgz oci://$REGISTRY

    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}

  terraform:
    runs-on: ubuntu-latest
    name: Terraforming
    needs: build_n_push
    steps:
      - name: Git clone the repositoy
        uses: actions/checkout@v4
        with:
          sparse-checkout: terraform

      - name: Configure AWS credentials in ENV
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform ${{ github.event.inputs.action }}
        working-directory: terraform
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
          TF_VAR_registry: ${{ needs.build_n_push.outputs.registry }}
          TF_VAR_environment: dev
          TF_VAR_project: demo
          TF_VAR_github_arn: ${{ secrets.GITHUB_ARN }}
        run: |
          terraform init -input=false
          terraform validate -no-color
          terraform ${{ github.event.inputs.action }} -input=false -auto-approve

  deploy:
    needs: terraform
    uses: ./.github/workflows/helm-deploy.yml
